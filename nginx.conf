events {
    worker_connections 1024;
}

http {
    resolver 8.8.8.8;
    
    server {
        listen 8080;
        
        location /proxy/ {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Extract the actual URL and reconstruct it properly
            if ($request_uri ~* "/proxy/(.*)") {
                set $target_url "https://$1";
                proxy_pass $target_url;
            }
            
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # Set headers
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;
            
            # Timeouts
            proxy_connect_timeout 10;
            proxy_send_timeout 30;
            proxy_read_timeout 30;
            
            # SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            
            # Other settings
            proxy_buffering off;
            proxy_redirect off;
            proxy_socket_keepalive on;

            # Use Warp as upstream proxy
            proxy_pass http://warp:1080;
        }
    }
}
